<?php

/**
 * BaseTransportLoad
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $customer_id
 * @property integer $transporter_id
 * @property integer $from
 * @property integer $to
 * @property string $load_description
 * @property integer $package_id
 * @property int $weight
 * @property timestamp $arrive_before
 * @property timestamp $arrive_after
 * @property timestamp $expired_at
 * @property enum $bid
 * @property string $comment
 * @property District $FromDistrict
 * @property District $ToDistrict
 * @property Customer $Customer
 * @property Transporter $Transporter
 * @property Package $Package
 * 
 * @method integer       getCustomerId()       Returns the current record's "customer_id" value
 * @method integer       getTransporterId()    Returns the current record's "transporter_id" value
 * @method integer       getFrom()             Returns the current record's "from" value
 * @method integer       getTo()               Returns the current record's "to" value
 * @method string        getLoadDescription()  Returns the current record's "load_description" value
 * @method integer       getPackageId()        Returns the current record's "package_id" value
 * @method int           getWeight()           Returns the current record's "weight" value
 * @method timestamp     getArriveBefore()     Returns the current record's "arrive_before" value
 * @method timestamp     getArriveAfter()      Returns the current record's "arrive_after" value
 * @method timestamp     getExpiredAt()        Returns the current record's "expired_at" value
 * @method enum          getBid()              Returns the current record's "bid" value
 * @method string        getComment()          Returns the current record's "comment" value
 * @method District      getFromDistrict()     Returns the current record's "FromDistrict" value
 * @method District      getToDistrict()       Returns the current record's "ToDistrict" value
 * @method Customer      getCustomer()         Returns the current record's "Customer" value
 * @method Transporter   getTransporter()      Returns the current record's "Transporter" value
 * @method Package       getPackage()          Returns the current record's "Package" value
 * @method TransportLoad setCustomerId()       Sets the current record's "customer_id" value
 * @method TransportLoad setTransporterId()    Sets the current record's "transporter_id" value
 * @method TransportLoad setFrom()             Sets the current record's "from" value
 * @method TransportLoad setTo()               Sets the current record's "to" value
 * @method TransportLoad setLoadDescription()  Sets the current record's "load_description" value
 * @method TransportLoad setPackageId()        Sets the current record's "package_id" value
 * @method TransportLoad setWeight()           Sets the current record's "weight" value
 * @method TransportLoad setArriveBefore()     Sets the current record's "arrive_before" value
 * @method TransportLoad setArriveAfter()      Sets the current record's "arrive_after" value
 * @method TransportLoad setExpiredAt()        Sets the current record's "expired_at" value
 * @method TransportLoad setBid()              Sets the current record's "bid" value
 * @method TransportLoad setComment()          Sets the current record's "comment" value
 * @method TransportLoad setFromDistrict()     Sets the current record's "FromDistrict" value
 * @method TransportLoad setToDistrict()       Sets the current record's "ToDistrict" value
 * @method TransportLoad setCustomer()         Sets the current record's "Customer" value
 * @method TransportLoad setTransporter()      Sets the current record's "Transporter" value
 * @method TransportLoad setPackage()          Sets the current record's "Package" value
 * 
 * @package    transzam
 * @subpackage model
 * @author     Hans Rip
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTransportLoad extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('transport_load');
        $this->hasColumn('customer_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('transporter_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('from_district as from', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('to_district as to', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('load_description', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('package_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('weight', 'int', null, array(
             'type' => 'int',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('arrive_before', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('arrive_after', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('expired_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('bid', 'enum', 9, array(
             'type' => 'enum',
             'length' => 9,
             'values' => 
             array(
              0 => 'Open',
              1 => 'Taken',
              2 => 'Cancelled',
             ),
             'default' => 'Open',
             ));
        $this->hasColumn('comment', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('District as FromDistrict', array(
             'local' => 'from_district',
             'foreign' => 'id'));

        $this->hasOne('District as ToDistrict', array(
             'local' => 'to_district',
             'foreign' => 'id'));

        $this->hasOne('Customer', array(
             'local' => 'customer_id',
             'foreign' => 'id'));

        $this->hasOne('Transporter', array(
             'local' => 'transporter_id',
             'foreign' => 'id'));

        $this->hasOne('Package', array(
             'local' => 'package_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}