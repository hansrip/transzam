# Detect relations between the tables
detect_relations: true

# TranszamPackage has different kind of PackType, like bags, container, pallets, cooling, other, etc
Package:
  columns:
   name: { type: string(50) }

# TranszamProvince describes the provinces
Province:
  columns:
    name: { type: string(50) }

# TranszamDistrict describes all the districts
District:
  columns:
   name: { type: string(50) }
   province_id: { type: integer, notnull: true }

# TranszamUser describes the userdetails

# User
User:
  columns:
    sf_guard_user_id: { type : integer(4) }
    company: { type: string(255) }
    district_id: { type: integer }
    address: { type: string(255) }
    email_address: { type: string(255) }
    tel: { type: string(255) }
    cell: { type: string(255) }
    comment: { type: string(255) }
    # Two additional "login" names.
    sms_number: { type: integer }
    token: { type: string(255) }
  relations:
    GuardUser:
        class: sfGuardUser
        foreignType: one
# Deze foreign relatie wordt automatisch gelegd!
#    InDistrict:
#       class: District
#       onDelete: CASCADE # Lijkt me  niet juist. een district staat toch op zichzelf?
#       local: district_id
#       foreign: id

# TranszamTransporter describes the transporter
Transporter:
  inheritance:
    extends: User
    type: column_aggregation
    keyField: user_type
    keyValue: transporter
  columns:
    number_of_trucks : { type : integer }

# TanszamCustomer describes the customer
Customer:
  inheritance:
    extends : User
    type: column_aggregation
    keyField : user_type
    keyValue : customer
  columns:
    business: { type : string(255) }

# TranszamTransportLoad has loads from the customer to the transporter.
TransportLoad:
  actAs: {Timestampable: ~ }
  columns:
    customer_id: { type: integer, notnull: true }
    transporter_id: { type: integer, notnull: true }
    from_district: { name: from_district as from, type: integer, notnull: true }
    to_district: { name: to_district as to, type: integer, notnull: true }
    load_description: { type: string(50) }
    package_id: { type: string(50), notnull: true }
    weight: { type: int, notnull: true, default: 0 }
    arrive_before: { type: timestamp, notnull: true }
    arrive_after: { type: timestamp }
    expired_at: { type: timestamp }
    bid: { type: enum, length: 9, values: [ 'Open', 'Taken', 'Cancelled' ], default: 'Open' }
    comment: { type: string(255) }
  relations:
      FromDistrict:
        class: District
        local: from_district
        foreign: id
      ToDistrict:
        class: District
        local: to_district
        foreign: id
